<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.1.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.food.chain.server</groupId>
    <artifactId>fc-server</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>fc-server</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-rest-hal-browser</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-mockmvc</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.9.2</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.9.2</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.6</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>29.0-jre</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <version>2.0.3.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework.security.oauth/spring-security-oauth2 -->
        <dependency>
            <groupId>org.springframework.security.oauth</groupId>
            <artifactId>spring-security-oauth2</artifactId>
            <version>2.3.0.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>


        <!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-jwt -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-jwt</artifactId>
            <version>LATEST</version>
        </dependency>

        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>LATEST</version>
        </dependency>

        <dependency>
            <groupId>org.web3j</groupId>
            <artifactId>core</artifactId>
            <version>3.5.0</version>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>LATEST</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.8.1</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.28.0</version>

                <configuration>
                    <!--<dockerHost>http://127.0.0.1:2375</dockerHost>-->

                    <!-- if pushing to docker hub -->
                    <verbose>true</verbose>

                    <!-- this is set up in the .m2 folder inside the settings.xml file -->
                    <!--<authConfig>-->
                    <!--<username>username</username>-->
                    <!--<password>password</password>-->
                    <!--</authConfig>-->
                    <!--<images>-->
                        <!--<image>-->
                            <!--<name>djdanijel/fc-server</name>-->
                            <!--<build>-->
                                <!--&lt;!&ndash; since docker runs as a separate process, if we put the docker file in the-->
                                <!--project root, it will zip the whole project even so it is more efficient to-->
                                <!--put it inside the src folder so as to have as small file as possible &ndash;&gt;-->
                                <!--<dockerFileDir>${project.basedir}/src/main/docker/</dockerFileDir>-->

                                <!--&lt;!&ndash; copies artifact to docker build dir in target &ndash;&gt;-->
                                <!--<assembly>-->
                                    <!--<descriptorRef>artifact</descriptorRef>-->
                                <!--</assembly>-->
                                <!--<tags>-->
                                    <!--&lt;!&ndash; we can change the tag here ex. production-->
                                    <!--or we can change the docker image name above &ndash;&gt;-->
                                    <!--<tag>latest</tag>-->
                                <!--</tags>-->
                            <!--</build>-->
                        <!--</image>-->
                    <!--</images>-->
                </configuration>

                <!--<executions>-->
                    <!--<execution>-->
                        <!--&lt;!&ndash; when we run mvn package, after the new jar is created, the new-->
                         <!--docker image will be created with that new jar &ndash;&gt;-->
                        <!--<phase>package</phase>-->
                        <!--<goals>-->
                            <!--<goal>build</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->

                    <!--&lt;!&ndash; by running 'mvn clean deploy' it will build the app and push the newest version to docker hub&ndash;&gt;-->
                    <!--<execution>-->
                        <!--<id>docker-hub-deploy</id>-->
                        <!--<phase>deploy</phase>-->
                        <!--<goals>-->
                            <!--<goal>push</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->

                <!--</executions>-->
            </plugin>

            <!-- this is to avoid mvn error when deploy command is executed -->
            <!--<plugin>-->
                <!--<artifactId>maven-deploy-plugin</artifactId>-->
                <!--<configuration>-->
                    <!--<skip>true</skip>-->
                <!--</configuration>-->
            <!--</plugin>-->
        </plugins>
        <finalName>fc-server</finalName>
    </build>

</project>
